<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Study on Dinwy&#39;s blog</title>
    <link>https://dinwy.github.io/categories/study/</link>
    <description>Recent content in Study on Dinwy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2019 15:31:58 +0900</lastBuildDate>
    
	<atom:link href="https://dinwy.github.io/categories/study/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SunTempleReverseEngineering</title>
      <link>https://dinwy.github.io/study/2019/sunTempleReverseEngineering/</link>
      <pubDate>Mon, 13 May 2019 15:31:58 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/sunTempleReverseEngineering/</guid>
      <description>Preface I have seen a good article about reverse engineering UE4 tutorial assets. So I got inspired by that and try to do the same thing.
Source From [Unreal 언리얼]태양의 사원 리버스 엔지니어링: http://blog.naver.com/PostView.nhn?blogId=cccani&amp;amp;logNo=221315412825&amp;amp;from=search&amp;amp;redirect=Log&amp;amp;widgetTypeCall=true&amp;amp;directAccess=false
Summary So I download the SunTemple example project and opened in Unreal. Then I opened SM_Pillar model.
About modeling the top part of pillar, the leaf decoration seems like used same brush. And AO &amp;amp; Normal has been added to low poly model.</description>
    </item>
    
    <item>
      <title>BasicMath</title>
      <link>https://dinwy.github.io/study/2019/BasicMath/</link>
      <pubDate>Tue, 26 Feb 2019 15:54:09 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/BasicMath/</guid>
      <description>Preface Time to understand basic math which often used in OpenGL.
Source From  Vector dot product and vector length: https://www.khanacademy.org/math/linear-algebra/vectors-and-spaces/dot-cross-products/v/vector-dot-product-and-vector-length dot - OpenGL 4 Reference Page: https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/dot.xhtml How to Normalized Vector: https://www.youtube.com/watch?v=7fn03DIW3Ak Vector: https://khanacademy.org/computing/computer-programming/programming-natural-simulations/programming-vectors/a/intro-to-vectors  Summary Nomenclature  Vector: Consist of direction and magnitude. Dot Product: Generate scalar value. Unit Vector: Create unit vector. Vector / Magnitude. u^=∣∣u∣∣ / u-&amp;gt; Scalar Quantity: A quantity which does not depend on direction.</description>
    </item>
    
    <item>
      <title>DepthFirstSearch</title>
      <link>https://dinwy.github.io/study/2019/depthFirstSearch/</link>
      <pubDate>Wed, 20 Feb 2019 11:36:30 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/depthFirstSearch/</guid>
      <description>Preface Yesterday, I have solved algorithm quiz on LeetCode: https://leetcode.com/problems/number-of-islands/ After solving the problem, I&amp;rsquo;ve realized that this quiz is related with DFS(depth-first-search). So it is good to know what is DFS.
Source From  Depth-first search: https://en.wikipedia.org/wiki/Depth-first_search Recursion: https://www.dotnetperls.com/recursion  Summary  C# doesn&amp;rsquo;t support tail-recursion-optimization &amp;gt; Yes, the CLR supports .tail. The Roslyn compiler currently has no facility for inserting .tail at all, regardless of what the CLR currently does, however.</description>
    </item>
    
    <item>
      <title>RayMarching#1</title>
      <link>https://dinwy.github.io/study/2019/rayMarching/</link>
      <pubDate>Tue, 19 Feb 2019 12:12:50 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/rayMarching/</guid>
      <description>Preface Using OpenGL, practicing ray marching.
Source From  http://iquilezles.org/www/articles/distfunctions/distfunctions.htm http://jamie-wong.com/2016/07/15/ray-marching-signed-distance-functions/ How to Normalize a vector: https://www.youtube.com/watch?v=7fn03DIW3Ak  Summary  ShaderToy controls only a fragment shader  Nomenclature ShaderToy  fragCoord: Current fragment(pixel) position iResolution: The size of the frame. Equal to windows/viewport Signed Distance Functions(SDF): When passed the coordinates of a point in space, return the shortest distance between that point and some surface. Radians: Convert a quantity in degrees to radians.</description>
    </item>
    
    <item>
      <title>OpenGL Functions</title>
      <link>https://dinwy.github.io/study/2019/openGLFunctions/</link>
      <pubDate>Fri, 15 Feb 2019 19:42:18 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/openGLFunctions/</guid>
      <description>Preface Learning about OpenGL shaders.
Source From  Shadertoy for absolute beginners: https://youtu.be/u5HAYVHsasc  Summary vec3 invert(vec3 inp) { return vec3(inp.x * -1., inp.y * -1., inp.z * -1.); } float oneMinus(float inpt) { return 1. - inpt; } float circle(vec2 uv, vec2 p, float r, float blur) { float d = length(uv - p); float c = smoothstep(r, r-blur, d); return c; } void mainImage( out vec4 fragColor, in vec2 fragCoord ) { // Normalized pixel coordinates (from 0 to 1) vec2 uv = fragCoord.</description>
    </item>
    
    <item>
      <title>NodesInUE4</title>
      <link>https://dinwy.github.io/study/2019/nodesUE4/</link>
      <pubDate>Tue, 05 Feb 2019 14:40:34 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/nodesUE4/</guid>
      <description>Preface It is a good time to learn about shader nodes.
Source From  http://wiki.amplify.pt/index.php?title=Unity_Products:Amplify_Shader_Editor/Panner https://docs.unrealengine.com/en-US/Engine/Rendering/Materials/ExpressionReference/Math https://www.youtube.com/watch?v=_thf1Z3j73s  Summary Nomenclature Nodes  Panner: The Panner node moves a UV coordinate or other Vector 2 position by speed according to a Time value. OneMinus: The OneMinus expression takes an input value &amp;ldquo;X&amp;rdquo; and outputs &amp;ldquo;One Minus X&amp;rdquo;. This operation is performed per channel.  Examples: OneMinus of 0.4 is 0.6; OneMinus of (0.</description>
    </item>
    
    <item>
      <title>Singleton</title>
      <link>https://dinwy.github.io/study/2019/singleton/</link>
      <pubDate>Mon, 04 Feb 2019 15:15:22 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/singleton/</guid>
      <description>Preface I think it is a good time to review and cleanup my C# knowledge.
Source From  http://csharpindepth.com/Articles/General/Singleton.aspx https://stackoverflow.com/questions/614818/in-c-what-is-the-difference-between-public-private-protected-and-having-no  Summary  Private constructor Static instance to achieve singleton class Nested class to initialized singleton class Using System.Lazy is also possible way to create singleton class  public sealed class SingletonNested { private SingletonNested() { } class SingletonCreator { static SingletonCreator() { } internal static readonly SingletonNested Instance = new SingletonNested(); } public static SingletonNested Instance { get { return SingletonCreator.</description>
    </item>
    
    <item>
      <title>Forward Rendering VS Deferred Rendering</title>
      <link>https://dinwy.github.io/study/2019/forwardRenderingVSDeferredRendering/</link>
      <pubDate>Fri, 25 Jan 2019 15:30:24 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/forwardRenderingVSDeferredRendering/</guid>
      <description>Preface Understanding difference between forward rendering and deferred rendering.
Source From https://gamedevelopment.tutsplus.com/articles/forward-rendering-vs-deferred-rendering--gamedev-12342 https://www.youtube.com/watch?v=C8FK9Xn1gUM
Summary  Modern graphics pipe line  Vertex Shader: +position +normal +texCoord Geometry Shader: Executes once for each primitive Fragment Shader: pixel color  Deferred lighting is a modification of deferred rendering that reduces the size of the G-buffer by using more passes on the scene. Lighting is the main reason for going one route versus the other.</description>
    </item>
    
    <item>
      <title>Houdini Vector Field</title>
      <link>https://dinwy.github.io/study/2019/houdiniVectorField/</link>
      <pubDate>Wed, 23 Jan 2019 16:48:43 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/houdiniVectorField/</guid>
      <description>Preface What I&amp;rsquo;ve learned while making vector field on Houdini. Which will be used in UE4.
Source From http://www.tokeru.com/cgwiki/index.php?title=HoudiniVolumes
Summary  SideFX provide &amp;ldquo;Game Development Toolset&amp;rdquo;: https://www.sidefx.com/tutorials/game-development-toolset-overview/ VolumeTrail node needs 2 things  Points to trail Velocity Volumes  Bounds and Scatter node will make scatter dots VDBFromPolygons node is useful.  Nomenclature  Houdini: VFX and 3D modeling software VDB: Volumetric Data Blocks (Not really. It is just a name) SDF: Signed Distance Field VOPs: Vector OPerators  Common Attributes  P | vector | Point position.</description>
    </item>
    
    <item>
      <title>What is Materials</title>
      <link>https://dinwy.github.io/study/2019/materials/</link>
      <pubDate>Tue, 22 Jan 2019 10:33:36 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/materials/</guid>
      <description>Preface I have found good articles about explaining about materials. Therefore it is a good time to clean that up.
Source From http://www.manufato.com/?p=902 https://m.blog.naver.com/cccani/221233015525
Summary  World is only visible because they are reflecting light. Diffuse Reflection  The light is reflected from the surface at multiple different angles.  Specular Reflection  The light that comes in and reflects out from the surface make the same angle.  Conductors alter the color of the specular reflection, tinting them.</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>https://dinwy.github.io/study/2019/intro/</link>
      <pubDate>Tue, 22 Jan 2019 10:22:12 +0900</pubDate>
      
      <guid>https://dinwy.github.io/study/2019/intro/</guid>
      <description>Description I&amp;rsquo;ve realized that I cannot explain what I think i know in written words. Therefore it is good to start a new category &amp;ldquo;Study&amp;rdquo; which I&amp;rsquo;ll write down what I know or what I&amp;rsquo;ve learned. By writing it I can clean up my thoughts and be able to explain my knowledge to other people rather than vaguely knowing something.</description>
    </item>
    
  </channel>
</rss>