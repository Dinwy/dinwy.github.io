<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Dinwy&#39;s blog</title>
    <link>https://dinwy.github.io/categories/algorithm/</link>
    <description>Recent content in Algorithm on Dinwy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Mar 2020 00:15:11 +0900</lastBuildDate>
    
	<atom:link href="https://dinwy.github.io/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode/20. Valid Parentheses</title>
      <link>https://dinwy.github.io/algorithm/2020/ValidParentheses/</link>
      <pubDate>Thu, 12 Mar 2020 00:15:11 +0900</pubDate>
      
      <guid>https://dinwy.github.io/algorithm/2020/ValidParentheses/</guid>
      <description>Preface I think I&amp;rsquo;ve already solved this problem on CodeWars. But it is a good exercise solve this problem again.
Link https://leetcode.com/problems/valid-parentheses
Summary This is asking two things, can you use Stack and Dictionary. When I was solving this first time, I was more thinking about using three HashSet. However after thinking and checking the best solution, I only need a single Dictionary &amp;amp; temporary Stack to validate.
Solution My First Solution public bool IsValidFirstSolution(string s) { var stack = new Stack&amp;lt;string&amp;gt;(s.</description>
    </item>
    
    <item>
      <title>LeetCode/7. ReverseInteger &amp; LeetCode/9. PalindromeNumber</title>
      <link>https://dinwy.github.io/algorithm/2020/ReverseIntegerAndPalindromeNumber/</link>
      <pubDate>Wed, 11 Mar 2020 19:24:54 +0900</pubDate>
      
      <guid>https://dinwy.github.io/algorithm/2020/ReverseIntegerAndPalindromeNumber/</guid>
      <description>Preface I&amp;rsquo;m trying to take a Easy difficulty ones to warm up my coding practice.
Link https://leetcode.com/problems/reverse-integer/ https://leetcode.com/problems/palindrome-number/
Summary Solving these two problem wasn&amp;rsquo;t hard. Both are asking the same thing. Can you pop number from integer rather than using string  However re-learning that pop = x % 10 &amp;amp; x /= 10
Solution 7.ReverseInteger public class ReverseInteger { public int Solution(int x) { var str = x.ToString(); var leng = x &amp;lt; 0 ?</description>
    </item>
    
    <item>
      <title>LeetCode/3. Add Two Numbers</title>
      <link>https://dinwy.github.io/algorithm/2020/AddTwoNumbers/</link>
      <pubDate>Tue, 10 Mar 2020 21:30:57 +0900</pubDate>
      
      <guid>https://dinwy.github.io/algorithm/2020/AddTwoNumbers/</guid>
      <description>Preface I&amp;rsquo;ve solved this problem a year ago with a weird way. Today I&amp;rsquo;ve reviewed this problem.
Link  https://leetcode.com/problems/add-two-numbers  Summary Reviewing this problem took more than an hour, which made me disappointed and surprise me.  I was very confused assigning outputTail. Same as
{ l1 = l1.next; l2 = l2.next; outputTail = outputTail.next; }  By assigning nextNode to the currentNode which will make loop end at some point.</description>
    </item>
    
    <item>
      <title>Udemy/11Essential: Rotating 2D array 90 degree</title>
      <link>https://dinwy.github.io/algorithm/2020/Rotating2DArray/</link>
      <pubDate>Mon, 17 Feb 2020 22:47:51 +0900</pubDate>
      
      <guid>https://dinwy.github.io/algorithm/2020/Rotating2DArray/</guid>
      <description>Preface It is a interesting question that how to solve this problem. It was really easy to solve this with temp array and copy the value with recursive function. However I was quite confused how to solve in-array When I was solving this problem I was quite confused how to move the element to the array.
My Solution # Recursive solution def rotate(given_array, n): rotated = copy.deepcopy(given_array) for pRow in range(n): for pCol in range(n): rotated[pCol][(n - 1) - pRow] = given_array[pRow][pCol] return given_array  # In-place solution def rotate(given_array, n): for y in range((int)(n / 2)): for x in range(math.</description>
    </item>
    
    <item>
      <title>LeetCode/387. First Unique Character in a String</title>
      <link>https://dinwy.github.io/algorithm/2020/NonRepeatingCharacter/</link>
      <pubDate>Wed, 12 Feb 2020 23:15:22 +0900</pubDate>
      
      <guid>https://dinwy.github.io/algorithm/2020/NonRepeatingCharacter/</guid>
      <description> https://leetcode.com/problems/first-unique-character-in-a-string
Basically this question is asking you about how to you Dictionary. Understanding how to handle key and value and index, can solve this problem easily.
My Solution class Solution(object): def firstUniqChar(self, s): strDict = {} for item in s: if (item in strDict): strDict[item] += 1 else: strDict[item] = 1 for idx, key in enumerate(s): if strDict[key] == 1: return idx return -1  </description>
    </item>
    
  </channel>
</rss>